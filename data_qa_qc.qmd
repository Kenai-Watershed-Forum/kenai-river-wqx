# Data QA/QC

See the following:

-   [Appendix A: Data Review and Upload](#appendix_a) in this report provides an example of the QA/QC process used for data presented in this report, based off of procedures provided by the Alaska Department of Environmental Conservation.

-   For QA/QC reviews of data other than year 2021, see <https://github.com/Kenai-Watershed-Forum/kenai-river-wqx-qaqc>

-   For QA/QC review of data prior to 2013, see [@guerronorejuela2016]

Note on data in figures vs. tables in the following chapters:

-   Boxplots: all data displayed visually in the boxplots in the following chapters has passed the QA/QC processes described in [Appendix A: Data Review and Upload](#appendix_a).

-   Tables: each chapter contains a downloadable table of source data for the boxplots. Data that was flagged, or did not pass the QA/QC process described in Appendix A, is listed as "Rejected" in this column.

Note on further QA/QC efforts:

-   As of `r Sys.Date()`, we are focusing on synchronizing data from years 2014 - 2021 to the EPA Water Quality Portal. When that is complete, we will investigate if additional QA/QC may need to be performed on project data already existing in the Water Quality Portal. For data scientists, use the "Show Me the Code" button in the upper right corner to see a draft example of this process.
-   In select cases, observations from 2000 - 2013 that were already in the WQP were visually identified as outliers (e.g. not realistic observations of in-situ conditions) and excluded from both the figures and tables in the following chapters. We justify this choice because prior to year 2022, the use of a field blank sample for total metals and dissolved metals was not in place, which can help identify and diagnose issues with field procedures contamination.\
    \
    The observations designated as outliers are available for download here below, along with a rationale for why each decision was made.

```{r echo = F}

library(xfun)

embed_file("other/input/outliers/baseline_outliers.xlsx", text = "Download the spreadsheet of observations visually designated as outliers")

```

```{r echo = F}
# stop knit processes here
knitr::knit_exit()
```

```{r echo = F}

# Draft example code for further investigation of 2000 - 2013 already in the WQP 
# Code generated by ChatGPT / Benjamin Meyer on 3/28/2025

library(tidyverse)
library(rlang)

detect_outliers <- function(data, value_col, detection_col, status_col = NULL,
                            export_csv = FALSE, export_path = "outliers.csv",
                            make_plots = TRUE, plot_title = NULL) {
  
  # Capture column names as symbols
  value_col <- enquo(value_col)
  detection_col <- enquo(detection_col)
  status_col <- enquo(status_col)

  # Filter valid observations
  df <- data %>%
    filter(
      !is.na(!!value_col),
      !!detection_col != "Not Detected",
      if (!quo_is_null(status_col)) !!status_col == "Final" else TRUE
    ) %>%
    mutate(
      z_score = scale(!!value_col)[, 1],
      median_val = median(!!value_col),
      mad_val = median(abs(!!value_col - median_val)),
      mad_z = 0.6745 * (!!value_col - median_val) / mad_val
    )

  # IQR calculations
  Q1 <- quantile(pull(df, !!value_col), 0.25)
  Q3 <- quantile(pull(df, !!value_col), 0.75)
  IQR <- Q3 - Q1
  lower <- Q1 - 1.5 * IQR
  upper <- Q3 + 1.5 * IQR

  df_out <- df %>%
    mutate(
      outlier_iqr = (!!value_col < lower | !!value_col > upper),
      outlier_z = abs(z_score) > 3,
      outlier_mad = abs(mad_z) > 3
    )

  summary <- df_out %>%
    summarise(
      n_total = n(),
      iqr_outliers = sum(outlier_iqr),
      z_outliers = sum(outlier_z),
      mad_outliers = sum(outlier_mad),
      max_value = max(!!value_col),
      p99 = quantile(!!value_col, 0.99)
    )

  if (export_csv) {
    df_out %>%
      filter(outlier_iqr | outlier_z | outlier_mad) %>%
      write_csv(export_path)
  }

  if (make_plots) {
    plots <- list(
      histogram = ggplot(df_out, aes(x = !!value_col)) +
        geom_histogram(bins = 30, fill = "skyblue", color = "black") +
        labs(
          title = ifelse(is.null(plot_title), "Histogram", paste0("Histogram - ", plot_title)),
          x = "Measurement", y = "Frequency"
        ),
      
      boxplot = ggplot(df_out, aes(y = !!value_col)) +
        geom_boxplot(fill = "lightgray") +
        labs(
          title = ifelse(is.null(plot_title), "Boxplot", paste0("Boxplot - ", plot_title)),
          y = "Measurement"
        )
    )
    print(plots$histogram)
    print(plots$boxplot)
  }

  return(list(data = df_out, summary = summary))
}




```
